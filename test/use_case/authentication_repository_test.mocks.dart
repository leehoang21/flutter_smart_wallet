// Mocks generated by Mockito 5.1.0 from annotations
// in flutter_application_1/test/user_use_case_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i5;
import 'package:flutter_smart_wallet/repository/remote/authentication_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFirebaseAuth_0 extends _i1.Fake implements _i2.FirebaseAuth {}

class _FakeUserCredential_1 extends _i1.Fake implements _i2.UserCredential {}

/// A class which mocks [UserCredential].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserCredential extends _i1.Mock implements _i2.UserCredential {
  MockUserCredential() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i3.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseAuth get auth => (super.noSuchMethod(Invocation.getter(#auth),
      returnValue: _FakeFirebaseAuth_0()) as _i2.FirebaseAuth);
  @override
  _i4.Future<void> verifyPhoneNumber(
          {String? phoneNumber,
          void Function(_i5.FirebaseAuthException)? verificationFailed,
          dynamic Function(String, int?)? codeSent,
          int? reSendToken}) =>
      (super.noSuchMethod(
          Invocation.method(#verifyPhoneNumber, [], {
            #phoneNumber: phoneNumber,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #reSendToken: reSendToken
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.UserCredential> userCredential(
          _i5.PhoneAuthCredential? credential) =>
      (super.noSuchMethod(Invocation.method(#userCredential, [credential]),
              returnValue:
                  Future<_i2.UserCredential>.value(_FakeUserCredential_1()))
          as _i4.Future<_i2.UserCredential>);
  @override
  bool checkUserIsExist() =>
      (super.noSuchMethod(Invocation.method(#checkUserIsExist, []),
          returnValue: false) as bool);
}
